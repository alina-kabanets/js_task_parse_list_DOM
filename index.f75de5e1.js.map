{"mappings":"AAAA;AAEA,MAAM,YAAY,SAAS,gBAAgB,CAAC;AAC5C,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,gBAAgB;OAAI;CAAU;AAEpC,SAAS,UAAU,MAAM;IACvB,OAAO,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK;AACxD;AAEA,SAAS;IACP,OAAO,cAAc,IAAI,CAAC,CAAC,GAAG,IAAM,UAAU,KAAK,UAAU,IAC1D,OAAO,CAAC,CAAA,SAAU,KAAK,MAAM,CAAC;AACnC;AAEA,SAAS;IACP,OAAO,cAAc,GAAG,CAAC,CAAA,SAAW,CAAA;YAClC,MAAM,OAAO,SAAS;YACtB,UAAU,OAAO,OAAO,CAAC,QAAQ;YACjC,QAAQ,OAAO,OAAO,CAAC,MAAM;YAC7B,KAAK,OAAO,OAAO,CAAC,GAAG;QACzB,CAAA;AACF;AAEA;AACA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employees = document.querySelectorAll('li');\nconst list = document.querySelector('ul');\nconst employeesList = [...employees];\n\nfunction getSalary(person) {\n  return person.dataset.salary.slice(1).replaceAll(',', '');\n}\n\nfunction sortList() {\n  return employeesList.sort((a, b) => getSalary(b) - getSalary(a))\n    .forEach(person => list.append(person));\n}\n\nfunction getEmployees() {\n  return employeesList.map(person => ({\n    name: person.innerText,\n    position: person.dataset.position,\n    salary: person.dataset.salary,\n    age: person.dataset.age,\n  }));\n}\n\nsortList();\ngetEmployees();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}